---
import { actions, isInputError } from 'astro:actions';

interface Props {
    pet: {
        id: number;
        name: string;
        imageUrl: string;
    };
}

const { pet } = Astro.props;

const montosSugeridos = [
    { valor: 40000, etiqueta: "$40.000" },
    { valor: 50000, etiqueta: "$50.000" },
    { valor: 80000, etiqueta: "$80.000" },
    { valor: 100000, etiqueta: "$100.000" },
];

// Obtener el resultado de la acción
const result = await Astro.getActionResult(actions.createSponsorRequest);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<div class="bg-white rounded-2xl shadow-xl overflow-hidden">
    <div class="bg-amber-800 text-white p-6 flex justify-between items-center">
        <h3 class="text-xl font-bold">Formulario de Apadrinamiento</h3>
        <div class="bg-amber-700 rounded-full p-2">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5"
                viewBox="0 0 20 20"
                fill="currentColor"
            >
                <path
                    fill-rule="evenodd"
                    d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z"
                    clip-rule="evenodd"></path>
            </svg>
        </div>
    </div>

    {
        result?.data?.success && (
            <div
                class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 my-4 mx-8"
                role="alert"
            >
                <p class="font-medium">¡Éxito!</p>
                <p>{result.data.message}</p>
            </div>
        )
    }

    {
        result && !result.data?.success && (
            <div
                class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 my-4 mx-8"
                role="alert"
            >
                <p class="font-medium">Error</p>
                <p>{result.data!.message}</p>
            </div>
        )
    }

    <div class="p-8 bg-gradient-to-b from-amber-50/50 to-white">
        <div
            class="mb-8 flex items-center gap-4 bg-amber-50 p-4 rounded-lg border border-amber-100"
        >
            <img
                src={pet.imageUrl}
                alt={pet.name}
                class="w-16 h-16 rounded-full object-cover border-2 border-white shadow-lg"
            />
            <div>
                <h4 class="font-medium text-amber-900">
                    Apadrinar a {pet.name}
                </h4>
                <p class="text-sm text-gray-600">
                    Tu generosidad cambiará su vida mientras espera una familia
                    definitiva
                </p>
            </div>
        </div>

        <form
            class="space-y-6"
            method="POST"
            action={actions.createSponsorRequest}
        >
            <input type="hidden" name="petId" value={pet.id} />
            <div class="space-y-4">
                <div class="group">
                    <label
                        class="block text-sm font-medium text-amber-800 mb-1 transition-all group-focus-within:text-amber-600"
                    >
                        Nombre completo <span class="text-amber-600">*</span>
                    </label>
                    <input
                        type="text"
                        name="name"
                        required
                        class="w-full rounded-lg border border-amber-200 shadow-sm focus:border-amber-500 focus:ring-amber-500 py-2.5 px-3 transition-all duration-200 placeholder:text-gray-400"
                        placeholder="Tu nombre completo"
                        minlength="3"
                    />
                    {
                        result?.error?.fieldErrors?.name && (
                            <p class="text-red-500 text-xs mt-1">
                                {result.error.fieldErrors.name}
                            </p>
                        )
                    }
                </div>

                <div class="grid grid-cols-2 gap-4">
                    <div class="group">
                        <label
                            class="block text-sm font-medium text-amber-800 mb-1 transition-all group-focus-within:text-amber-600"
                        >
                            Teléfono <span class="text-amber-600">*</span>
                        </label>
                        <div class="relative">
                            <span
                                class="absolute left-3 top-1/2 -translate-y-1/2 text-amber-500"
                            >
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-4 w-4"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
                                    ></path>
                                </svg>
                            </span>
                            <input
                                type="tel"
                                name="phone"
                                required
                                class="w-full rounded-lg border border-amber-200 shadow-sm focus:border-amber-500 focus:ring-amber-500 py-2.5 pl-10 pr-3 transition-all duration-200"
                                placeholder="000-000-0000"
                                minlength="8"
                            />
                            {
                                inputErrors.phone && (
                                    <p class="text-red-500 text-xs mt-1">
                                        {inputErrors.phone}
                                    </p>
                                )
                            }
                        </div>
                    </div>
                    <div class="group">
                        <label
                            class="block text-sm font-medium text-amber-800 mb-1 transition-all group-focus-within:text-amber-600"
                        >
                            Email <span class="text-amber-600">*</span>
                        </label>
                        <div class="relative">
                            <span
                                class="absolute left-3 top-1/2 -translate-y-1/2 text-amber-500"
                            >
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-4 w-4"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                                    ></path>
                                </svg>
                            </span>
                            <input
                                type="email"
                                name="email"
                                required
                                class="w-full rounded-lg border border-amber-200 shadow-sm focus:border-amber-500 focus:ring-amber-500 py-2.5 pl-10 pr-3 transition-all duration-200"
                                placeholder="ejemplo@email.com"
                            />
                            {
                                inputErrors.email && (
                                    <p class="text-red-500 text-xs mt-1">
                                        {inputErrors.email}
                                    </p>
                                )
                            }
                        </div>
                    </div>
                </div>

                <div class="group">
                    <label
                        class="block text-sm font-medium text-amber-800 mb-1 transition-all group-focus-within:text-amber-600"
                    >
                        Dirección <span class="text-amber-600">*</span>
                    </label>
                    <input
                        type="text"
                        name="address"
                        required
                        class="w-full rounded-lg border border-amber-200 shadow-sm focus:border-amber-500 focus:ring-amber-500 py-2.5 px-3 transition-all duration-200 placeholder:text-gray-400"
                        placeholder="Tu dirección completa"
                        minlength="5"
                    />
                    {
                        result?.error?.fieldErrors?.address && (
                            <p class="text-red-500 text-xs mt-1">
                                {result.error.fieldErrors.address}
                            </p>
                        )
                    }
                </div>

                <div class="group">
                    <label
                        class="block text-sm font-medium text-amber-800 mb-3"
                    >
                        ¿Con cuánto deseas apadrinar mensualmente? <span
                            class="text-amber-600">*</span
                        >
                    </label>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
                        {
                            montosSugeridos.map((monto) => (
                                <label class="cursor-pointer">
                                    <input
                                        type="radio"
                                        name="monthlyAmount"
                                        value={monto.valor}
                                        class="peer sr-only"
                                        required
                                    />
                                    <div class="text-center border border-amber-200 rounded-lg py-2 peer-checked:bg-amber-600 peer-checked:text-white peer-checked:border-amber-600 hover:bg-amber-50 transition-colors">
                                        {monto.etiqueta}
                                    </div>
                                </label>
                            ))
                        }
                    </div>
                    {
                        inputErrors.monthlyAmount && (
                            <p class="text-red-500 text-xs mt-1">
                                {inputErrors.monthlyAmount}
                            </p>
                        )
                    }
                </div>
            </div>

            <div>
                <label class="flex items-start gap-2 cursor-pointer">
                    <input
                        type="checkbox"
                        required
                        class="mt-1 rounded text-amber-600 focus:ring-amber-500"
                    />
                    <span class="text-sm text-gray-600">
                        Declaro que soy mayor de edad y acepto ser contactado
                        para formalizar el proceso de apadrinamiento.
                    </span>
                </label>
            </div>

            <div class="pt-4">
                <button
                    type="submit"
                    class="w-full bg-gradient-to-r from-amber-600 to-amber-700 text-white py-3 px-6 rounded-xl font-semibold hover:from-amber-700 hover:to-amber-800 transition-all duration-300 transform hover:-translate-y-0.5 shadow-md hover:shadow-lg flex items-center justify-center gap-2"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                    >
                        <path
                            d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z"
                        ></path>
                    </svg>
                    Enviar solicitud de apadrinamiento
                </button>
            </div>

            <p class="text-xs text-gray-500 text-center mt-4">
                Nos pondremos en contacto contigo en un plazo máximo de 48 horas
                para formalizar el apadrinamiento.
            </p>
        </form>
    </div>
</div>
