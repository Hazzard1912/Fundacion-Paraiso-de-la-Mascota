---
import { actions, isInputError } from "astro:actions";
import AdminLayout from "../../../layouts/AdminLayout.astro";

export const prerender = false;

const { id } = Astro.params;
const adoptionId = parseInt(id);

// Obtener los detalles del adoptante
const { data: adopterDetails, error: fetchError } = await Astro.callAction(
    actions.getAdopterDetailsByAdoptionId,
    { adoptionId },
);

// Si no hay datos o hay error, redirigir a la lista de adopciones
if (fetchError || !adopterDetails) {
    console.error("Error al obtener detalles de la adopción:", fetchError);
    return Astro.redirect("/admin/adopciones");
}

// Verificar si hay resultado de la acción de actualización
const result = Astro.getActionResult(actions.updateAdopterDetails);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<AdminLayout title={`Editar Adopción #${id}`}>
    <div class="max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md">
        <div class="mb-6">
            <a
                href="/admin/adopciones"
                class="text-blue-600 hover:text-blue-800 flex items-center"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-5 w-5 mr-1"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                >
                    <path
                        fill-rule="evenodd"
                        d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z"
                        clip-rule="evenodd"></path>
                </svg>
                Volver a la lista de adopciones
            </a>
        </div>

        <h1 class="text-2xl font-bold mb-6">
            Editar información de adopción #{id}
        </h1>

        {/* Mensaje de éxito */}
        {
            result?.data?.success === true && (
                <div
                    class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6"
                    role="alert"
                >
                    <p class="font-bold">¡Actualización exitosa!</p>
                    <p>{result.data.message}</p>
                </div>
            )
        }

        {/* Mensaje de error */}
        {
            result?.data?.success === false && (
                <div
                    class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-6"
                    role="alert"
                >
                    <p class="font-bold">
                        La actualización no pudo completarse
                    </p>
                    <p>
                        {result.data.message ||
                            "Por favor, inténtalo nuevamente."}
                    </p>
                </div>
            )
        }

        {/* Error de validación general */}
        {
            result?.error && (
                <div
                    class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6"
                    role="alert"
                >
                    <p class="font-bold">Error al actualizar</p>
                    <p>
                        {isInputError(result.error)
                            ? "Por favor revisa los campos del formulario."
                            : result.error.message ||
                              "Ocurrió un error inesperado. Intenta nuevamente."}
                    </p>
                </div>
            )
        }

        <form
            method="POST"
            action={actions.updateAdopterDetails}
            class="space-y-6"
        >
            {/* Campo oculto para el ID del adoptante */}
            <input
                type="hidden"
                name="adopterId"
                value={adopterDetails.adopterId}
            />

            <div class="space-y-4">
                {/* Nombre */}
                <div class="group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        Nombre completo
                    </label>
                    <input
                        type="text"
                        name="name"
                        required
                        class:list={[
                            "w-full rounded-lg border shadow-sm py-2.5 px-3 transition-all duration-200",
                            inputErrors.name
                                ? "border-red-300 focus:border-red-500 focus:ring-red-500"
                                : "border-gray-300 focus:border-blue-500 focus:ring-blue-500",
                        ]}
                        value={adopterDetails.name}
                    />
                    {
                        inputErrors.name && (
                            <p class="text-red-500 text-xs mt-1">
                                {inputErrors.name.join(", ")}
                            </p>
                        )
                    }
                </div>

                {/* Email */}
                <div class="group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        Email
                    </label>
                    <input
                        type="email"
                        name="email"
                        required
                        class:list={[
                            "w-full rounded-lg border shadow-sm py-2.5 px-3 transition-all duration-200",
                            inputErrors.email
                                ? "border-red-300 focus:border-red-500 focus:ring-red-500"
                                : "border-gray-300 focus:border-blue-500 focus:ring-blue-500",
                        ]}
                        value={adopterDetails.email}
                    />
                    {
                        inputErrors.email && (
                            <p class="text-red-500 text-xs mt-1">
                                {inputErrors.email.join(", ")}
                            </p>
                        )
                    }
                </div>

                {/* Teléfono */}
                <div class="group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        Teléfono
                    </label>
                    <input
                        type="tel"
                        name="phone"
                        required
                        class:list={[
                            "w-full rounded-lg border shadow-sm py-2.5 px-3 transition-all duration-200",
                            inputErrors.phone
                                ? "border-red-300 focus:border-red-500 focus:ring-red-500"
                                : "border-gray-300 focus:border-blue-500 focus:ring-blue-500",
                        ]}
                        value={adopterDetails.phone}
                    />
                    {
                        inputErrors.phone && (
                            <p class="text-red-500 text-xs mt-1">
                                {inputErrors.phone.join(", ")}
                            </p>
                        )
                    }
                </div>

                {/* Dirección */}
                <div class="group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        Dirección
                    </label>
                    <input
                        type="text"
                        name="address"
                        required
                        class:list={[
                            "w-full rounded-lg border shadow-sm py-2.5 px-3 transition-all duration-200",
                            inputErrors.address
                                ? "border-red-300 focus:border-red-500 focus:ring-red-500"
                                : "border-gray-300 focus:border-blue-500 focus:ring-blue-500",
                        ]}
                        value={adopterDetails.address}
                    />
                    {
                        inputErrors.address && (
                            <p class="text-red-500 text-xs mt-1">
                                {inputErrors.address.join(", ")}
                            </p>
                        )
                    }
                </div>
            </div>

            <div class="flex justify-between pt-4">
                <a
                    href="/admin/adopciones"
                    class="py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                >
                    Cancelar
                </a>
                <button
                    type="submit"
                    class="py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                >
                    Guardar cambios
                </button>
            </div>
        </form>
    </div>
</AdminLayout>
