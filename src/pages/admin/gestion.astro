---
import AdminLayout from "../../layouts/AdminLayout.astro";

export const prerender = false;

// Simplified mock data for slider images
const existingSlides = [
    {
        id: 1,
        imageUrl:
            "https://images.unsplash.com/photo-1612460137028-a3c8c2e17758?q=80&w=2070&auto=format&fit=crop",
        active: true,
    },
    {
        id: 2,
        imageUrl:
            "https://images.unsplash.com/photo-1601758124316-3026abe11afe?q=80&w=2070&auto=format&fit=crop",
        active: true,
    },
];
---

<AdminLayout title="Gestión del Slider">
    <div class="space-y-6">
        <h1 class="text-3xl font-bold text-gray-800">Gestión del Slider</h1>

        <!-- Create New Slide Section -->
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-4">
                Agregar Nueva Imagen al Slider
            </h2>

            <form
                id="newSlideForm"
                class="space-y-4"
                enctype="multipart/form-data"
            >
                <div>
                    <label
                        for="slideImage"
                        class="block text-sm font-medium text-gray-700"
                        >Imagen para el slider</label
                    >
                    <div class="mt-1 flex items-center">
                        <div
                            id="imagePreviewContainer"
                            class="hidden mr-4 w-32 h-32 bg-gray-100 rounded-md flex items-center justify-center"
                        >
                            <img
                                id="imagePreview"
                                class="max-w-full max-h-full object-cover"
                                alt="Vista previa"
                            />
                        </div>
                        <input
                            type="file"
                            id="slideImage"
                            name="slideImage"
                            accept="image/*"
                            class="hidden"
                            required
                        />
                        <label
                            for="slideImage"
                            class="cursor-pointer inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
                        >
                            Seleccionar imagen
                        </label>
                        <p
                            id="fileNameDisplay"
                            class="ml-3 text-sm text-gray-500"
                        >
                        </p>
                    </div>
                    <p class="mt-1 text-sm text-gray-500">
                        PNG, JPG o WEBP (max. 2MB). La imagen debe incluir todo
                        el texto informativo necesario.
                    </p>
                </div>

                <div class="flex items-center">
                    <input
                        type="checkbox"
                        id="active"
                        name="active"
                        checked
                        class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    />
                    <label
                        for="active"
                        class="ml-2 block text-sm text-gray-700"
                    >
                        Mostrar en el slider
                    </label>
                </div>

                <div class="flex justify-end">
                    <button
                        type="submit"
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                    >
                        Agregar al slider
                    </button>
                </div>
            </form>
        </div>

        <!-- Existing Slides -->
        <h2 class="text-2xl font-semibold text-gray-800 mt-8">
            Imágenes Actuales del Slider
        </h2>

        {
            existingSlides.map((slide) => (
                <div class="bg-white rounded-lg shadow p-6 mt-4">
                    <div class="flex flex-col md:flex-row">
                        <div class="md:w-1/3 mb-4 md:mb-0">
                            <img
                                src={slide.imageUrl}
                                alt="Imagen del slider"
                                class="w-full h-auto object-cover rounded-lg"
                            />
                        </div>
                        <div class="md:w-2/3 md:pl-6">
                            <form
                                id={`slideForm-${slide.id}`}
                                class="space-y-4"
                            >
                                <input
                                    type="hidden"
                                    name="slideId"
                                    value={slide.id}
                                />

                                <div>
                                    <label
                                        for={`slideImage-${slide.id}`}
                                        class="block text-sm font-medium text-gray-700"
                                    >
                                        Cambiar imagen
                                    </label>
                                    <div class="mt-1 flex items-center">
                                        <input
                                            type="file"
                                            id={`slideImage-${slide.id}`}
                                            name="slideImage"
                                            accept="image/*"
                                            class="hidden"
                                        />
                                        <label
                                            for={`slideImage-${slide.id}`}
                                            class="cursor-pointer inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
                                        >
                                            Cambiar imagen
                                        </label>
                                        <p
                                            id={`fileNameDisplay-${slide.id}`}
                                            class="ml-3 text-sm text-gray-500"
                                        />
                                    </div>
                                    <p class="mt-1 text-sm text-gray-500">
                                        PNG, JPG o WEBP (max. 2MB)
                                    </p>
                                </div>

                                <div class="flex items-center">
                                    <input
                                        type="checkbox"
                                        id={`active-${slide.id}`}
                                        name="active"
                                        checked={slide.active}
                                        class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                                    />
                                    <label
                                        for={`active-${slide.id}`}
                                        class="ml-2 block text-sm text-gray-700"
                                    >
                                        Mostrar en el slider
                                    </label>
                                </div>

                                <div class="flex justify-end space-x-3">
                                    <button
                                        type="button"
                                        class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                                        data-slide-id={slide.id}
                                    >
                                        Eliminar
                                    </button>
                                    <button
                                        type="submit"
                                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                                    >
                                        Actualizar
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            ))
        }
    </div>

    <script>
        // Client-side JavaScript for image preview and validation
        document.addEventListener("DOMContentLoaded", function () {
            // Handle new slide image preview
            const fileInput = document.getElementById("slideImage");
            const fileNameDisplay = document.getElementById("fileNameDisplay");
            const imagePreview = document.getElementById("imagePreview");
            const previewContainer = document.getElementById(
                "imagePreviewContainer",
            );

            if (fileInput) {
                fileInput.addEventListener("change", function (e) {
                    const file = e.target.files[0];
                    if (file) {
                        // Validate file type
                        const validTypes = [
                            "image/jpeg",
                            "image/png",
                            "image/webp",
                            "image/jpg",
                        ];
                        if (!validTypes.includes(file.type)) {
                            alert(
                                "Por favor seleccione un archivo de imagen válido (PNG, JPG o WEBP)",
                            );
                            fileInput.value = "";
                            return;
                        }

                        // Validate file size (max 2MB)
                        if (file.size > 2 * 1024 * 1024) {
                            alert("El tamaño de la imagen no debe exceder 2MB");
                            fileInput.value = "";
                            return;
                        }

                        // Show file name
                        fileNameDisplay.textContent = file.name;

                        // Show preview
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            imagePreview.src = e.target.result;
                            previewContainer.classList.remove("hidden");
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }

            // Handle existing slides image preview
            document
                .querySelectorAll('input[type="file"][id^="slideImage-"]')
                .forEach((input) => {
                    input.addEventListener("change", function (e) {
                        const slideId = this.id.split("-")[1];
                        const fileNameDisplay = document.getElementById(
                            `fileNameDisplay-${slideId}`,
                        );
                        const file = e.target.files[0];
                        if (file) {
                            // Validate file type
                            const validTypes = [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/jpg",
                            ];
                            if (!validTypes.includes(file.type)) {
                                alert(
                                    "Por favor seleccione un archivo de imagen válido (PNG, JPG o WEBP)",
                                );
                                this.value = "";
                                return;
                            }

                            // Validate file size (max 2MB)
                            if (file.size > 2 * 1024 * 1024) {
                                alert(
                                    "El tamaño de la imagen no debe exceder 2MB",
                                );
                                this.value = "";
                                return;
                            }

                            // Show file name
                            fileNameDisplay.textContent = file.name;

                            // Update image preview (immediately above the file input's parent div)
                            const previewImg = this.closest(
                                ".flex.flex-col.md\\:flex-row",
                            ).querySelector("img");
                            const reader = new FileReader();
                            reader.onload = function (e) {
                                previewImg.src = e.target.result;
                            };
                            reader.readAsDataURL(file);
                        }
                    });
                });

            // Handle delete button clicks
            document
                .querySelectorAll("button[data-slide-id]")
                .forEach((button) => {
                    button.addEventListener("click", function () {
                        const slideId = this.getAttribute("data-slide-id");
                        if (
                            confirm(
                                "¿Estás seguro de que quieres eliminar esta imagen del slider? Esta acción no se puede deshacer.",
                            )
                        ) {
                            // Here you would typically make an API call to delete the slide
                            console.log(`Delete slide with ID: ${slideId}`);
                            // For demo purposes, let's just hide the slide container
                            this.closest(
                                ".bg-white.rounded-lg.shadow.p-6",
                            ).style.display = "none";
                        }
                    });
                });

            // Form submission for new slide
            const newSlideForm = document.getElementById("newSlideForm");
            if (newSlideForm) {
                newSlideForm.addEventListener("submit", function (e) {
                    e.preventDefault();
                    // Here you would typically handle the form submission with AJAX
                    alert(
                        "Imagen agregada al slider correctamente (simulación). En producción, esta información se guardaría en la base de datos.",
                    );
                    this.reset();
                    document
                        .getElementById("imagePreviewContainer")
                        .classList.add("hidden");
                    document.getElementById("fileNameDisplay").textContent = "";
                });
            }

            // Form submission for existing slides
            document
                .querySelectorAll('form[id^="slideForm-"]')
                .forEach((form) => {
                    form.addEventListener("submit", function (e) {
                        e.preventDefault();
                        // Here you would typically handle the form submission with AJAX
                        const slideId = this.querySelector(
                            'input[name="slideId"]',
                        ).value;
                        alert(
                            `Slider #${slideId} actualizado correctamente (simulación). En producción, esta información se guardaría en la base de datos.`,
                        );
                    });
                });
        });
    </script>
</AdminLayout>
