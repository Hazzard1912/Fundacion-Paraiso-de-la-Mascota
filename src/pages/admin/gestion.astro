---
import AdminLayout from "../../layouts/AdminLayout.astro";
import { actions } from "astro:actions";
import ImageUploader from "../../components/ImageUploader.jsx";

export const prerender = false;

let errorMessage = null;
let slides = [];

try {
    const { data, error } = await Astro.callAction(actions.getSlides, {});
    if (error) {
        console.error("Error fetching slides:", error);
        errorMessage = "Error loading slides";
    } else {
        slides = data.slides || [];
    }
} catch (e) {
    console.error("Exception fetching slides:", e);
    errorMessage = "Error loading slides";
}
---

<AdminLayout title="Gestión del Slider">
    <div class="space-y-6">
        <h1 class="text-3xl font-bold text-gray-800">Gestión del Slider</h1>

        <p class="text-gray-600">
            Administre las imágenes del slider de la página principal. Puede
            tener hasta 3 slides activos.
        </p>

        {errorMessage ? (
            <div class="bg-red-50 border-l-4 border-red-500 p-4 my-4">
                <p class="text-red-700">{errorMessage}</p>
            </div>
        ) : (
            <>
                <!-- Existing Slides -->
                <h2 class="text-2xl font-semibold text-gray-800 mt-8">
                    Imágenes del Slider
                </h2>

                {
                    slides.map((slide) => (
                        <div class="bg-white rounded-xl shadow-md p-6 mt-6 flex flex-col md:flex-row items-center gap-6">
                            <div class="flex-1 w-full">
                                <form
                                    id={`slideForm-${slide.id}`}
                                    class="space-y-4"
                                    data-slide-id={slide.id}
                                >
                                    <input
                                        type="hidden"
                                        name="id"
                                        value={slide.id}
                                    />

                                    <div>
                                        <ImageUploader 
                                            imageUrl={slide.imageUrl} 
                                            setImageUrl={""}
                                            buttonText={slide.imageUrl ? "Cambiar imagen" : "Subir imagen"}
                                            slideId={slide.id}
                                            client:load
                                        />
                                        <p class="mt-1 text-sm text-gray-500">
                                            PNG, JPG o WEBP (max. 5MB). La imagen
                                            debe incluir todo el texto informativo
                                            necesario.
                                        </p>
                                    </div>

                                    <div class="flex items-center gap-4">
                                        <span class="text-sm text-gray-500">
                                            Estado:
                                            <span class={
                                                slide.active
                                                    ? "text-green-600 font-medium ml-1"
                                                    : "text-red-600 font-medium ml-1"
                                            }>
                                                {slide.active ? "Activo" : "Inactivo"}
                                            </span>
                                        </span>
                                        <button
                                            type="button"
                                            class="slide-status-btn px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
                                            data-slide-id={slide.id}
                                            data-action={slide.active ? "deactivate" : "activate"}
                                        >
                                            {slide.active ? "Inactivar" : "Activar"}
                                        </button>
                                        <button
                                            type="submit"
                                            class="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors"
                                        >
                                            Actualizar
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    ))
                }
            </>
        )}
    </div>

    <style>
        .image-container {
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f9fafb;
        }
    </style>

    <script>
        import { actions } from "astro:actions";

        document.addEventListener("DOMContentLoaded", function () {
            // Handle activate/deactivate slide buttons
            document.querySelectorAll(".slide-status-btn").forEach((button) => {
                button.addEventListener("click", async function () {
                    const slideId = this.getAttribute("data-slide-id");
                    const action = this.getAttribute("data-action");

                    try {
                        if (action === "activate") {
                            if (confirm("¿Desea activar este slide?")) {
                                const result = await actions.activateSlide({
                                    id: parseInt(slideId),
                                });

                                if (result) {
                                    window.location.reload();
                                } else {
                                    alert(
                                        "Error al activar el slide"
                                    );
                                }
                            }
                        } else if (action === "deactivate") {
                            if (confirm("¿Desea inactivar este slide?")) {
                                const result = await actions.deactivateSlide({
                                    id: parseInt(slideId),
                                });

                                if (result) {
                                    window.location.reload();
                                } else {
                                    alert(
                                        "Error al inactivar el slide: "
                                    );
                                }
                            }
                        }
                    } catch (error) {
                        console.error("Error:", error);
                        alert("Error al procesar la solicitud");
                    }
                });
            });

            // Form submission for updating slides
            document
                .querySelectorAll('form[id^="slideForm-"]')
                .forEach((form) => {
                    form.addEventListener("submit", async function (e) {
                        e.preventDefault();

                        const slideId = this.getAttribute("data-slide-id");
                        const imageDataInput = this.querySelector('input[name="imageData"]');

                        if (!imageDataInput || !imageDataInput.value) {
                            alert("Por favor seleccione una imagen para actualizar");
                            return;
                        }

                        try {
                            const result = await actions.updateSlide({
                                id: parseInt(slideId),
                                imageUrl: imageDataInput.value
                            });

                            if (result) {
                                alert("Slide actualizado correctamente");
                                window.location.reload();
                            } else {
                                alert("Error al actualizar el slide");
                            }
                        } catch (error) {
                            console.error("Error:", error);
                            alert("Error al procesar la solicitud");
                        }
                    });
                });
        });
    </script>
</AdminLayout>