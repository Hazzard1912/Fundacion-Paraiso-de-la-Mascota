---
import AdminLayout from "../../layouts/AdminLayout.astro";
import { actions } from "astro:actions";

export const prerender = false;

let errorMessage = null;
let slides = [];

try {
    const { data, error } = await Astro.callAction(actions.getSlides, {});
    if (error) {
        console.error("Error fetching slides:", error);
        errorMessage = "Error loading slides";
    } else {
        slides = data.slides;

        console.log("Slides fetched successfully:", slides);
    }
} catch (e) {
    console.error("Exception fetching slides:", e);
    errorMessage = "Error loading slides";
}
---

<AdminLayout title="Gestión del Slider">
    <div class="space-y-6">
        <h1 class="text-3xl font-bold text-gray-800">Gestión del Slider</h1>

        <p class="text-gray-600">
            Administre las imágenes del slider de la página principal. Puede
            tener hasta 3 slides activos.
        </p>

        {errorMessage ? (
            <div class="bg-red-50 border-l-4 border-red-500 p-4 my-4">
                <p class="text-red-700">{errorMessage}</p>
            </div>
        ) : (
            <>
                <!-- Existing Slides -->
                <h2 class="text-2xl font-semibold text-gray-800 mt-8">
                    Imágenes del Slider
                </h2>

                {
                    slides.map((slide) => (
                        <div class="bg-white rounded-lg shadow p-6 mt-4">
                            <div class="flex flex-col md:flex-row">
                                <div class="md:w-1/3 mb-4 md:mb-0">
                                    <div class="image-container h-48 w-full overflow-hidden rounded-lg">
                                        {slide.imageUrl ? (
                                            <img
                                                src={slide.imageUrl}
                                                alt="Imagen del slider"
                                                class="w-full h-full object-cover"
                                            />
                                        ) : (
                                            <div class="w-full h-full bg-gray-200 flex items-center justify-center">
                                                <p class="text-gray-500">Sin imagen</p>
                                            </div>
                                        )}
                                    </div>
                                    <p class="mt-2 text-sm text-gray-500">
                                        Slide #{slide.id} - Estado:{" "}
                                        <span
                                            class={
                                                slide.active
                                                    ? "text-green-600 font-medium"
                                                    : "text-red-600 font-medium"
                                            }
                                        >
                                            {slide.active ? "Activo" : "Inactivo"}
                                        </span>
                                    </p>
                                </div>
                                <div class="md:w-2/3 md:pl-6">
                                    <form
                                        id={`slideForm-${slide.id}`}
                                        class="space-y-4"
                                        data-slide-id={slide.id}
                                    >
                                        <input
                                            type="hidden"
                                            name="id"
                                            value={slide.id}
                                        />

                                        <div>
                                            <label
                                                for={`slideImage-${slide.id}`}
                                                class="block text-sm font-medium text-gray-700"
                                            >
                                                {slide.imageUrl
                                                    ? "Cambiar imagen"
                                                    : "Subir imagen"}
                                            </label>
                                            <div class="mt-1 flex items-center">
                                                <input
                                                    type="file"
                                                    id={`slideImage-${slide.id}`}
                                                    name="slideImage"
                                                    accept="image/*"
                                                    class="hidden"
                                                />
                                                <label
                                                    for={`slideImage-${slide.id}`}
                                                    class="cursor-pointer inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
                                                >
                                                    Seleccionar imagen
                                                </label>
                                                <p
                                                    id={`fileNameDisplay-${slide.id}`}
                                                    class="ml-3 text-sm text-gray-500"
                                                />
                                            </div>
                                            <p class="mt-1 text-sm text-gray-500">
                                                PNG, JPG o WEBP (max. 5MB). La imagen
                                                debe incluir todo el texto informativo
                                                necesario.
                                            </p>
                                        </div>

                                        <div class="flex justify-end space-x-3">
                                            {slide.active ? (
                                                <button
                                                    type="button"
                                                    class="slide-status-btn inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                                                    data-slide-id={slide.id}
                                                    data-action="deactivate"
                                                >
                                                    Inactivar slide
                                                </button>
                                            ) : (
                                                <button
                                                    type="button"
                                                    class="slide-status-btn inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                                                    data-slide-id={slide.id}
                                                    data-action="activate"
                                                >
                                                    Activar slide
                                                </button>
                                            )}
                                            <button
                                                type="submit"
                                                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                                            >
                                                Guardar cambios
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    ))
                }
            </>
        )}
    </div>

    <style>
        .image-container {
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f9fafb;
        }
    </style>

    <script>
        // Import the action functions directly in the client-side script
        import { actions } from "astro:actions";

        document.addEventListener("DOMContentLoaded", function () {
            // File input handling for each slide
            document
                .querySelectorAll('input[type="file"][id^="slideImage-"]')
                .forEach((input) => {
                    input.addEventListener("change", function (e) {
                        const slideId = this.id.split("-")[1];
                        const fileNameDisplay = document.getElementById(
                            `fileNameDisplay-${slideId}`,
                        );
                        const file = e.target.files[0];
                        if (file) {
                            // Validate file type
                            const validTypes = [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/jpg",
                            ];
                            if (!validTypes.includes(file.type)) {
                                alert(
                                    "Por favor seleccione un archivo de imagen válido (PNG, JPG o WEBP)",
                                );
                                this.value = "";
                                return;
                            }

                            // Validate file size (max 5MB)
                            if (file.size > 5 * 1024 * 1024) {
                                alert(
                                    "El tamaño de la imagen no debe exceder 5MB",
                                );
                                this.value = "";
                                return;
                            }

                            // Show file name
                            fileNameDisplay.textContent = file.name;
                        }
                    });
                });

            // Handle activate/deactivate slide buttons
            document.querySelectorAll(".slide-status-btn").forEach((button) => {
                button.addEventListener("click", async function () {
                    const slideId = this.getAttribute("data-slide-id");
                    const action = this.getAttribute("data-action");

                    try {
                        if (action === "activate") {
                            if (confirm("¿Desea activar este slide?")) {
                                // Call the action directly
                                const result = await actions.activateSlide({
                                    id: parseInt(slideId),
                                });

                                if (result) {
                                    window.location.reload();
                                } else {
                                    alert(
                                        "Error al activar el slide"
                                    );
                                }
                            }
                        } else if (action === "deactivate") {
                            if (confirm("¿Desea inactivar este slide?")) {
                                // Call the action directly
                                const result = await actions.deactivateSlide({
                                    id: parseInt(slideId),
                                });

                                if (result) {
                                    window.location.reload();
                                } else {
                                    alert(
                                        "Error al inactivar el slide: "
                                    );
                                }
                            }
                        }
                    } catch (error) {
                        console.error("Error:", error);
                        alert("Error al procesar la solicitud");
                    }
                });
            });

            // Form submission for updating slides
            document
                .querySelectorAll('form[id^="slideForm-"]')
                .forEach((form) => {
                    form.addEventListener("submit", async function (e) {
                        e.preventDefault();

                        const slideId = this.getAttribute("data-slide-id");
                        const fileInput =
                            this.querySelector('input[type="file"]');

                        // Check if a file was selected
                        if (!fileInput.files || fileInput.files.length === 0) {
                            alert(
                                "Por favor seleccione una imagen para actualizar",
                            );
                            return;
                        }

                        try {
                            // Convert the image file to base64
                            const file = fileInput.files[0];
                            const reader = new FileReader();

                            reader.onloadend = async function () {
                                const base64String = reader.result;

                                // Call the action directly
                                const result = await actions.updateSlide({
                                    id: parseInt(slideId),
                                    imageUrl: base64String,
                                });

                                if (result) {
                                    alert("Slide actualizado correctamente");
                                    window.location.reload();
                                } else {
                                    alert(
                                        "Error al actualizar el slide"
                                    );
                                }
                            };

                            reader.readAsDataURL(file);
                        } catch (error) {
                            console.error("Error:", error);
                            alert("Error al procesar la solicitud");
                        }
                    });
                });
        });
    </script>
</AdminLayout>
